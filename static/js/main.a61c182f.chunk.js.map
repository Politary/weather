{"version":3,"sources":["images/icons/Error.svg","images/icons/Search.svg","App.styles.js","store/main/main.slice.js","components/SearchBar/SearchBar.styles.js","components/SearchBar/SearchBar.jsx","components/WeatherList/WeatherList.styles.js","components/WeatherCard/WeatherCard.styles.js","components/WeatherCard/WeatherCard.jsx","utils/utils.js","components/SearchButton/SearchButton.styles.js","components/SearchButton/SearchButton.jsx","components/CitiesList/CitiesList.styles.js","components/ListItem/ListItem.styles.js","components/ListItem/ListItem.jsx","components/CitiesList/CitiesList.jsx","components/WeatherList/WeatherList.jsx","App.js","store/main/main.sagas.js","store/root.reducer.js","store/index.js","index.js"],"names":["module","exports","Container","styled","div","weatherSlice","createSlice","name","initialState","location","country","unixDate","weatherIcon","currentTemp","feelsLike","weather","windSpeed","humidity","state","errorCode","reducers","getWeatherFetch","getWeatherSuccess","action","payload","getWeatherFailure","console","log","response","status","county","actions","StyledSearchBar","input","SearchBar","handleInputChange","handleSearch","inputValue","handleSearchBarMount","ref","useRef","useEffect","type","placeholder","onChange","onKeyDown","e","code","value","WeatherWrapper","attrs","props","isLoading","SearchWrapper","ErrorWrapper","FooterItem","WeatherHeader","WeatherFooter","WeatherStat","StatValue","span","CurrentTemp","WeatherTypeContainer","City","Country","Weather","Date","Panel","WeatherCard","date","day","getDay","dayNum","getDate","month","getMonth","unixDateToString","src","alt","Error","StyledSearchButton","button","SearchButton","onClick","Search","StyledCitiesList","ul","searchBarPosition","top","height","left","width","StyledListItem","li","Item","ListItem","id","CitiesList","filteredCities","slice","map","city","key","WeatherList","dispatch","useDispatch","useSelector","useState","setInputValue","setFilteredCities","setSearchBarPosition","handleSearchByName","useCallback","current","getBoundingClientRect","target","citiesList","filter","toLowerCase","includes","App","workGetWeatherFetch","weatherSaga","weatherData","call","axios","get","Number","isInteger","formattedWeatherData","data","parse","list","dt_txt","main","icon","temp","feels_like","wind","speed","put","takeEvery","rootReducer","combineReducers","weatherReducer","saga","createSagaMiddleware","store","configureStore","reducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a61c182f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Error.da5cc546.svg\";","module.exports = __webpack_public_path__ + \"static/media/Search.c2a17a15.svg\";","import styled from 'styled-components/macro';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    max-width: 500px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst weatherSlice = createSlice({\n    name: 'weather',\n    initialState: {\n        location: {\n            name: '',\n            country: '',\n            unixDate: '',\n            weatherIcon: null,\n            currentTemp: '',\n            feelsLike: '',\n            weather: '',\n            windSpeed: '',\n            humidity: null,\n        },\n        state: 'idle',\n        errorCode: null,\n    },\n    reducers: {\n        getWeatherFetch: (state) => {\n            state.state = 'loading';\n        },\n        getWeatherSuccess: (state, action) => {\n            state.location = action.payload;\n            state.state = 'loaded';\n            state.errorCode = null;\n        },\n        getWeatherFailure: (state, action) => {\n            console.log(action.payload.response.status);\n            state.state = 'error';\n            state.errorCode = action.payload.response.status;\n            state.location = {\n                name: '',\n                county: '',\n                unixDate: '',\n                weatherIcon: null,\n                currentTemp: '',\n                feelsLike: '',\n                weather: '',\n                windSpeed: '',\n                humidity: null,\n            };\n        },\n    },\n});\n\nexport default weatherSlice.reducer;\nexport const { getWeatherFetch, getWeatherSuccess, getWeatherFailure } =\n    weatherSlice.actions;\n","import styled from 'styled-components/macro';\r\n\r\nexport const StyledSearchBar = styled.input`\r\n    box-sizing: border-box;\r\n    width: 595px;\r\n    height: 50px;\r\n    border: none;\r\n    border-radius: 6px 0 0 6px;\r\n    background-color: white;\r\n    padding: 14px 16px;\r\n    color: #8ca4b3;\r\n    &:focus,\r\n    &:active,\r\n    &:focus-visible {\r\n        border: none;\r\n        outline: none;\r\n    }\r\n`;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { StyledSearchBar } from './SearchBar.styles';\r\n\r\nexport const SearchBar = ({\r\n    handleInputChange,\r\n    handleSearch,\r\n    inputValue,\r\n    handleSearchBarMount,\r\n}) => {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        handleSearchBarMount(ref);\r\n    }, [handleSearchBarMount]);\r\n    const handleInputSubmit = (e) => {\r\n        if (e.code === 'Enter') {\r\n            handleSearch();\r\n        }\r\n    };\r\n    return (\r\n        <StyledSearchBar\r\n            ref={ref}\r\n            type=\"text\"\r\n            placeholder=\"Search by city name\"\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleInputSubmit}\r\n            value={inputValue}\r\n        />\r\n    );\r\n};\r\n","import styled from 'styled-components/macro';\n\nexport const WeatherWrapper = styled.div.attrs((props) => ({\n    name: props.name,\n    isLoading: props.isLoading,\n}))`\n    //display: ${(props) =>\n        props.name === '' && !props.isLoading ? 'none' : 'flex'};\n    border-radius: 6px;\n`;\n\nexport const SearchWrapper = styled.div`\n    display: flex;\n    margin-top: 100px;\n    margin-bottom: 50px;\n`;\n\nexport const ErrorWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    img {\n        width: 109px;\n        height: 116px;\n        margin: 32px;\n    }\n    span {\n        font-weight: 600;\n        line-height: 1.5rem;\n        color: #9ab0bd;\n    }\n`;\n","import styled from 'styled-components/macro';\n\nexport const FooterItem = styled.div`\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    padding: 24px;\n    width: 50%;\n    box-sizing: border-box;\n    height: 100%;\n    img {\n        height: 50px;\n        width: 50px;\n    }\n    :first-of-type {\n        border-right: 1px solid #8ca4b3;\n        justify-content: space-between;\n    }\n`;\n\nexport const WeatherHeader = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 55px;\n    width: 645px;\n    padding: 20px 24px;\n    border-bottom: 1px solid #8ca4b3;\n    border-radius: 6px 6px 0 0;\n`;\n\nexport const WeatherFooter = styled.div`\n    display: flex;\n    align-items: center;\n    height: 120px;\n    width: 645px;\n`;\n\nexport const WeatherStat = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 95px;\n    font-size: 0.75rem;\n    font-weight: 500;\n    color: #8ca4b3;\n    padding-right: 32px;\n`;\n\nexport const StatValue = styled.span`\n    color: #435865;\n`;\n\nexport const CurrentTemp = styled.div`\n    display: flex;\n    height: 100%;\n    align-items: center;\n    font-size: 4rem;\n    color: #435865;\n`;\n\nexport const WeatherTypeContainer = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100%;\n    flex-direction: column;\n`;\n\nexport const City = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n    color: #435865; ;\n`;\n\nexport const Country = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n    color: #8ca4b3;\n    padding-left: 12px;\n`;\n\nexport const Weather = styled.span`\n    font-size: 14px;\n    font-weight: 500;\n    color: #435865;\n`;\n\nexport const Date = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n    color: #8ca4b3;\n`;\n\nexport const Panel = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    border-radius: 6px;\n    background-color: white;\n`;\n","import React from 'react';\r\nimport {\r\n    FooterItem,\r\n    Panel,\r\n    WeatherTypeContainer,\r\n    WeatherFooter,\r\n    WeatherHeader,\r\n    CurrentTemp,\r\n    WeatherStat,\r\n    StatValue,\r\n    Country,\r\n    Date,\r\n    City,\r\n    Weather,\r\n} from './WeatherCard.styles';\r\nimport { unixDateToString } from '../../utils/utils';\r\nimport Error from '../../images/icons/Error.svg';\r\nimport { ErrorWrapper } from '../WeatherList/WeatherList.styles';\r\n\r\nexport const WeatherCard = (props) => {\r\n    const {\r\n        location: {\r\n            name,\r\n            country,\r\n            unixDate,\r\n            weatherIcon,\r\n            currentTemp,\r\n            feelsLike,\r\n            weather,\r\n            windSpeed,\r\n            humidity,\r\n        },\r\n        state,\r\n        errorCode,\r\n    } = props;\r\n    if (state === 'loaded' && errorCode === null) {\r\n        return (\r\n            <Panel>\r\n                <WeatherHeader>\r\n                    <div>\r\n                        <City>{name}</City>\r\n                        <Country>{country}</Country>\r\n                    </div>\r\n                    <Date>{unixDateToString(unixDate)}</Date>\r\n                </WeatherHeader>\r\n                <WeatherFooter>\r\n                    <FooterItem>\r\n                        <CurrentTemp>{`${currentTemp}°`}</CurrentTemp>\r\n                        <WeatherTypeContainer>\r\n                            {weatherIcon ? (\r\n                                <img\r\n                                    src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\r\n                                    alt=\"weatherImage\"\r\n                                />\r\n                            ) : null}\r\n                            <Weather>{weather}</Weather>\r\n                        </WeatherTypeContainer>\r\n                    </FooterItem>\r\n                    <FooterItem>\r\n                        <WeatherStat>\r\n                            <span>Humidity:</span>\r\n                            <StatValue>{`${humidity}%`}</StatValue>\r\n                        </WeatherStat>\r\n                        <WeatherStat>\r\n                            <span>Wind:</span>\r\n                            <StatValue>{`${windSpeed}km/h`}</StatValue>\r\n                        </WeatherStat>\r\n                        <WeatherStat>\r\n                            <span>Feels like</span>\r\n                            <StatValue>{` ${feelsLike}°`}</StatValue>\r\n                        </WeatherStat>\r\n                    </FooterItem>\r\n                </WeatherFooter>\r\n            </Panel>\r\n        );\r\n    } else if (state === 'error' && errorCode === 404) {\r\n        return (\r\n            <ErrorWrapper>\r\n                <img src={Error} alt=\"error\" />\r\n                <span>Sorry, there is no such city</span>\r\n            </ErrorWrapper>\r\n        );\r\n    } else if (state === 'error')\r\n        return (\r\n            <ErrorWrapper>\r\n                <img src={Error} alt=\"error\" />\r\n                <span>{`Error ${errorCode} occurred :(`}</span>\r\n            </ErrorWrapper>\r\n        );\r\n    else return <Panel />;\r\n};\r\n","export const unixDateToString = (unixDate) => {\n    let date = new Date(unixDate);\n    const day = date.getDay();\n    const dayNum = date.getDate();\n    const month = date.getMonth();\n\n    const weekday = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n    ];\n    const monthName = [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n    ];\n\n    return `${weekday[day]}, ${monthName[month]} ${dayNum}`;\n};\n","import styled from 'styled-components/macro';\r\n\r\nexport const StyledSearchButton = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    width: 50px;\r\n    height: 50px;\r\n    border: none;\r\n    background-color: white;\r\n    border-radius: 0 6px 6px 0;\r\n`;\r\n","import React from 'react';\r\nimport { StyledSearchButton } from './SearchButton.styles';\r\nimport Search from '../../images/icons/Search.svg';\r\n\r\nexport const SearchButton = ({ handleSearch }) => {\r\n    return (\r\n        <StyledSearchButton onClick={handleSearch}>\r\n            <img src={Search} alt=\"search\" />\r\n        </StyledSearchButton>\r\n    );\r\n};\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const StyledCitiesList = styled.ul`\r\n    position: fixed;\r\n    background-color: #eff5f9;\r\n    list-style-type: none;\r\n    padding: 5px;\r\n    margin: 0;\r\n    top: ${(props) =>\r\n        props.searchBarPosition.top + props.searchBarPosition.height + 'px'};\r\n    left: ${(props) => props.searchBarPosition.left + 'px'};\r\n    width: ${(props) => props.searchBarPosition.width + 50 + 'px'};\r\n`;\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const StyledListItem = styled.li`\r\n    height: 65px;\r\n    background: transparent;\r\n    border-bottom: 1px solid #8ca4b3;\r\n    color: #435865;\r\n    font-weight: 500;\r\n    button {\r\n        cursor: pointer;\r\n        border: none;\r\n        background: transparent;\r\n        display: flex;\r\n        align-items: center;\r\n        width: 100%;\r\n        height: 100%;\r\n        color: #435865;\r\n        font-size: 14px;\r\n        font-family: 'Inter', sans-serif;\r\n    }\r\n`;\r\n\r\nexport const Item = styled.div`\r\n    margin: 0 12px;\r\n`;\r\n","import React from 'react';\r\nimport { StyledListItem, Item } from './ListItem.styles';\r\n\r\nexport const ListItem = ({ name, country, id, handleSearch }) => {\r\n    return (\r\n        <StyledListItem>\r\n            <button value={id} onClick={() => handleSearch(id)}>\r\n                <Item>{name}</Item>\r\n                <Item>{country}</Item>\r\n            </button>\r\n        </StyledListItem>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { StyledCitiesList } from './CitiesList.styles';\r\nimport { ListItem } from '../ListItem/ListItem';\r\n\r\nexport const CitiesList = ({\r\n    filteredCities,\r\n    inputValue,\r\n    searchBarPosition,\r\n    handleSearch,\r\n}) => {\r\n    if (filteredCities && inputValue)\r\n        return (\r\n            <StyledCitiesList searchBarPosition={searchBarPosition}>\r\n                {filteredCities.slice(0, 10).map((city) => (\r\n                    <ListItem\r\n                        key={city.id}\r\n                        name={city.name}\r\n                        country={city.country}\r\n                        id={city.id}\r\n                        handleSearch={handleSearch}\r\n                    />\r\n                ))}\r\n            </StyledCitiesList>\r\n        );\r\n    else return <div />;\r\n};\r\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getWeatherFetch } from '../../store/main/main.slice';\n\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchWrapper, WeatherWrapper } from './WeatherList.styles';\nimport { WeatherCard } from '../WeatherCard/WeatherCard';\nimport { SearchButton } from '../SearchButton/SearchButton';\n\nimport citiesList from '../../json/city.list.min.json';\nimport { CitiesList } from '../CitiesList/CitiesList';\n\nexport const WeatherList = () => {\n    const dispatch = useDispatch();\n    const weather = useSelector((state) => state.weather);\n    const [inputValue, setInputValue] = useState('');\n    const [filteredCities, setFilteredCities] = useState([]);\n    const [searchBarPosition, setSearchBarPosition] = useState([]);\n\n    const handleSearchByName = () => {\n        if (inputValue !== '') handleSearch(inputValue);\n    };\n\n    const handleSearch = (value) => {\n        if (weather.state !== 'loading') {\n            dispatch(getWeatherFetch(value));\n            setInputValue('');\n        }\n    };\n\n    const handleSearchBarMount = useCallback((ref) => {\n        if (ref.current) {\n            setSearchBarPosition(ref.current.getBoundingClientRect());\n        }\n    }, []);\n\n    const filterCities = () => {\n        setFilteredCities(\n            citiesList.filter((city) => {\n                return city.name\n                    .toLowerCase()\n                    .includes(inputValue.toLowerCase());\n            })\n        );\n    };\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n        filterCities();\n    };\n\n    return (\n        <div>\n            <SearchWrapper>\n                <SearchBar\n                    handleInputChange={handleInputChange}\n                    handleSearch={handleSearchByName}\n                    inputValue={inputValue}\n                    handleSearchBarMount={handleSearchBarMount}\n                />\n                <SearchButton\n                    handleSearch={handleSearchByName}\n                    inputValue={inputValue}\n                >\n                    Search\n                </SearchButton>\n            </SearchWrapper>\n            <WeatherWrapper>\n                <WeatherCard\n                    location={weather.location}\n                    state={weather.state}\n                    errorCode={weather.errorCode}\n                />\n            </WeatherWrapper>\n            <CitiesList\n                filteredCities={filteredCities}\n                inputValue={inputValue}\n                searchBarPosition={searchBarPosition}\n                handleSearch={handleSearch}\n            />\n        </div>\n    );\n};\n","import React from 'react';\nimport './App.css';\nimport { Container } from './App.styles';\nimport { WeatherList } from './components/WeatherList/WeatherList';\n\nfunction App() {\n    return (\n        <div>\n            <Container>\n                <WeatherList />\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { getWeatherSuccess, getWeatherFailure } from './main.slice';\r\n\r\nfunction* workGetWeatherFetch(action) {\r\n    try {\r\n        let weatherData = {};\r\n        if (typeof action.payload === 'string') {\r\n            weatherData = yield call(() =>\r\n                axios.get(\r\n                    `https://api.openweathermap.org/data/2.5/forecast?q=${action.payload}&units=metric&lang=russian&appid=c53bf3e244553ba293bc4ff420dc8478`\r\n                )\r\n            );\r\n        } else if (Number.isInteger(action.payload)) {\r\n            weatherData = yield call(() =>\r\n                axios.get(\r\n                    `https://api.openweathermap.org/data/2.5/forecast?id=${action.payload}&units=metric&lang=russian&appid=c53bf3e244553ba293bc4ff420dc8478`\r\n                )\r\n            );\r\n        }\r\n        const formattedWeatherData = {\r\n            name: weatherData.data.city.name,\r\n            country: weatherData.data.city.country,\r\n            unixDate: Date.parse(weatherData.data.list[0].dt_txt),\r\n            weather: weatherData.data.list[0].weather[0].main,\r\n            weatherIcon: weatherData.data.list[0].weather[0].icon,\r\n            currentTemp: weatherData.data.list[0].main.temp,\r\n            feelsLike: weatherData.data.list[0].main.feels_like,\r\n            windSpeed: weatherData.data.list[0].wind.speed,\r\n            humidity: weatherData.data.list[0].main.humidity,\r\n        };\r\n        yield put(getWeatherSuccess(formattedWeatherData));\r\n    } catch (error) {\r\n        yield put(getWeatherFailure(error));\r\n    }\r\n}\r\n\r\nfunction* weatherSaga() {\r\n    yield takeEvery('weather/getWeatherFetch', workGetWeatherFetch);\r\n}\r\n\r\nexport default weatherSaga;\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport weatherReducer from './main/main.slice';\r\n\r\nexport const rootReducer = combineReducers({\r\n    weather: weatherReducer,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport weatherSaga from './main/main.sagas';\nimport { rootReducer } from './root.reducer';\n\nconst saga = createSagaMiddleware();\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware: [saga],\n});\n\nsaga.run(weatherSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}