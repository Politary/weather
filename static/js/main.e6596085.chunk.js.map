{"version":3,"sources":["images/icons/Error.svg","images/icons/Search.svg","App.styles.js","store/main/main.slice.js","components/SearchBar/SearchBar.styles.js","components/SearchBar/SearchBar.jsx","components/WeatherList/WeatherList.styles.js","components/WeatherCard/WeatherCard.styles.js","components/WeatherCard/WeatherCard.jsx","utils/utils.js","components/SearchButton/SearchButton.styles.js","components/SearchButton/SearchButton.jsx","components/CitiesList/CitiesList.styles.js","components/ListItem/ListItem.styles.js","components/ListItem/ListItem.jsx","components/CitiesList/CitiesList.jsx","components/WeatherList/WeatherList.jsx","App.js","store/main/main.sagas.js","store/root.reducer.js","store/index.js","index.js"],"names":["module","exports","Container","styled","div","weatherSlice","createSlice","name","initialState","location","country","unixDate","weatherIcon","currentTemp","feelsLike","weather","windSpeed","humidity","state","errorCode","reducers","getWeatherFetch","getWeatherSuccess","action","payload","getWeatherFailure","console","log","response","status","county","actions","StyledSearchBar","input","SearchBar","handleInputChange","handleSearch","inputValue","handleSearchBarMount","ref","useRef","useEffect","type","placeholder","onChange","onKeyDown","e","code","value","WeatherWrapper","attrs","props","isLoading","SearchWrapper","ErrorWrapper","FooterItem","WeatherHeader","WeatherFooter","WeatherStat","StatValue","span","CurrentTemp","WeatherTypeContainer","City","Country","Weather","Date","Panel","WeatherCard","date","day","getDay","dayNum","getDate","month","getMonth","unixDateToString","src","alt","Error","StyledSearchButton","button","SearchButton","onClick","Search","StyledCitiesList","ul","searchBarPosition","top","height","left","width","StyledListItem","li","Item","ListItem","id","CitiesList","filteredCities","slice","map","city","key","WeatherList","dispatch","useDispatch","useSelector","useState","setInputValue","setFilteredCities","setSearchBarPosition","handleSearchByName","trim","useCallback","current","getBoundingClientRect","target","citiesList","filter","toLowerCase","includes","App","workGetWeatherFetch","weatherSaga","weatherData","call","axios","get","Number","isInteger","formattedWeatherData","data","parse","list","dt_txt","main","icon","temp","feels_like","wind","speed","put","takeEvery","rootReducer","combineReducers","weatherReducer","saga","createSagaMiddleware","store","configureStore","reducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6596085.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Error.da5cc546.svg\";","module.exports = __webpack_public_path__ + \"static/media/Search.c2a17a15.svg\";","import styled from 'styled-components/macro';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    -webkit-box-align: center;\n    align-items: center;\n    max-width: 500px;\n    margin-left: auto;\n    margin-right: auto;\n`;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst weatherSlice = createSlice({\n    name: 'weather',\n    initialState: {\n        location: {\n            name: '',\n            country: '',\n            unixDate: '',\n            weatherIcon: null,\n            currentTemp: '',\n            feelsLike: '',\n            weather: '',\n            windSpeed: '',\n            humidity: null,\n        },\n        state: 'idle',\n        errorCode: null,\n    },\n    reducers: {\n        getWeatherFetch: (state) => {\n            state.state = 'loading';\n        },\n        getWeatherSuccess: (state, action) => {\n            state.location = action.payload;\n            state.state = 'loaded';\n            state.errorCode = null;\n        },\n        getWeatherFailure: (state, action) => {\n            console.log(action.payload.response.status);\n            state.state = 'error';\n            state.errorCode = action.payload.response.status;\n            state.location = {\n                name: '',\n                county: '',\n                unixDate: '',\n                weatherIcon: null,\n                currentTemp: '',\n                feelsLike: '',\n                weather: '',\n                windSpeed: '',\n                humidity: null,\n            };\n        },\n    },\n});\n\nexport default weatherSlice.reducer;\nexport const { getWeatherFetch, getWeatherSuccess, getWeatherFailure } =\n    weatherSlice.actions;\n","import styled from 'styled-components/macro';\n\nexport const StyledSearchBar = styled.input`\n    box-sizing: border-box;\n    width: 595px;\n    height: 50px;\n    border: none;\n    border-radius: 6px 0 0 6px;\n    background-color: white;\n    padding: 14px 16px;\n    color: #8ca4b3;\n    &:focus,\n    &:active,\n    &:focus-visible {\n        border: none;\n        outline: none;\n    }\n`;\n","import React, { useRef, useEffect } from 'react';\nimport { StyledSearchBar } from './SearchBar.styles';\n\nexport const SearchBar = ({\n    handleInputChange,\n    handleSearch,\n    inputValue,\n    handleSearchBarMount,\n}) => {\n    const ref = useRef();\n    useEffect(() => {\n        handleSearchBarMount(ref);\n    }, [handleSearchBarMount]);\n    const handleInputSubmit = (e) => {\n        if (e.code === 'Enter') {\n            handleSearch();\n        }\n    };\n    return (\n        <StyledSearchBar\n            ref={ref}\n            type=\"text\"\n            placeholder=\"Search by city name\"\n            onChange={handleInputChange}\n            onKeyDown={handleInputSubmit}\n            value={inputValue}\n        />\n    );\n};\n","import styled from 'styled-components/macro';\n\nexport const WeatherWrapper = styled.div.attrs((props) => ({\n    name: props.name,\n    isLoading: props.isLoading,\n}))`\n    //display: ${(props) =>\n        props.name === '' && !props.isLoading ? 'none' : 'flex'};\n    border-radius: 6px;\n`;\n\nexport const SearchWrapper = styled.div`\n    display: flex;\n    margin-top: 100px;\n    margin-bottom: 50px;\n`;\n\nexport const ErrorWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    img {\n        width: 109px;\n        height: 116px;\n        margin: 32px;\n    }\n    span {\n        font-weight: 600;\n        line-height: 1.5rem;\n        color: #9ab0bd;\n    }\n`;\n","import styled from 'styled-components/macro';\n\nexport const FooterItem = styled.div`\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    padding: 24px;\n    width: 50%;\n    box-sizing: border-box;\n    height: 100%;\n    img {\n        height: 50px;\n        width: 50px;\n    }\n    :first-of-type {\n        border-right: 1px solid #8ca4b3;\n        justify-content: space-between;\n    }\n`;\n\nexport const WeatherHeader = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 55px;\n    width: 645px;\n    padding: 20px 24px;\n    border-bottom: 1px solid #8ca4b3;\n    border-radius: 6px 6px 0 0;\n`;\n\nexport const WeatherFooter = styled.div`\n    display: flex;\n    align-items: center;\n    height: 120px;\n    width: 645px;\n`;\n\nexport const WeatherStat = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 95px;\n    font-size: 0.75rem;\n    font-weight: 500;\n    color: #8ca4b3;\n    padding-right: 32px;\n`;\n\nexport const StatValue = styled.span`\n    color: #435865;\n`;\n\nexport const CurrentTemp = styled.div`\n    display: flex;\n    height: 100%;\n    align-items: center;\n    font-size: 4rem;\n    color: #435865;\n`;\n\nexport const WeatherTypeContainer = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100%;\n    flex-direction: column;\n`;\n\nexport const City = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n    color: #435865; ;\n`;\n\nexport const Country = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n    color: #8ca4b3;\n    padding-left: 12px;\n`;\n\nexport const Weather = styled.span`\n    font-size: 14px;\n    font-weight: 500;\n    color: #435865;\n`;\n\nexport const Date = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n    color: #8ca4b3;\n`;\n\nexport const Panel = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    border-radius: 6px;\n    background-color: white;\n`;\n","import React from 'react';\nimport {\n    FooterItem,\n    Panel,\n    WeatherTypeContainer,\n    WeatherFooter,\n    WeatherHeader,\n    CurrentTemp,\n    WeatherStat,\n    StatValue,\n    Country,\n    Date,\n    City,\n    Weather,\n} from './WeatherCard.styles';\nimport { unixDateToString } from '../../utils/utils';\nimport Error from '../../images/icons/Error.svg';\nimport { ErrorWrapper } from '../WeatherList/WeatherList.styles';\n\nexport const WeatherCard = (props) => {\n    const {\n        location: {\n            name,\n            country,\n            unixDate,\n            weatherIcon,\n            currentTemp,\n            feelsLike,\n            weather,\n            windSpeed,\n            humidity,\n        },\n        state,\n        errorCode,\n    } = props;\n    if (state === 'loaded' && errorCode === null) {\n        return (\n            <Panel>\n                <WeatherHeader>\n                    <div>\n                        <City>{name}</City>\n                        <Country>{country}</Country>\n                    </div>\n                    <Date>{unixDateToString(unixDate)}</Date>\n                </WeatherHeader>\n                <WeatherFooter>\n                    <FooterItem>\n                        <CurrentTemp>{`${currentTemp}°`}</CurrentTemp>\n                        <WeatherTypeContainer>\n                            {weatherIcon ? (\n                                <img\n                                    src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\n                                    alt=\"weatherImage\"\n                                />\n                            ) : null}\n                            <Weather>{weather}</Weather>\n                        </WeatherTypeContainer>\n                    </FooterItem>\n                    <FooterItem>\n                        <WeatherStat>\n                            <span>Humidity:</span>\n                            <StatValue>{`${humidity}%`}</StatValue>\n                        </WeatherStat>\n                        <WeatherStat>\n                            <span>Wind:</span>\n                            <StatValue>{`${windSpeed}km/h`}</StatValue>\n                        </WeatherStat>\n                        <WeatherStat>\n                            <span>Feels like</span>\n                            <StatValue>{` ${feelsLike}°`}</StatValue>\n                        </WeatherStat>\n                    </FooterItem>\n                </WeatherFooter>\n            </Panel>\n        );\n    } else if (state === 'error' && errorCode === 404) {\n        return (\n            <ErrorWrapper>\n                <img src={Error} alt=\"error\" />\n                <span>Sorry, there is no such city</span>\n            </ErrorWrapper>\n        );\n    } else if (state === 'error')\n        return (\n            <ErrorWrapper>\n                <img src={Error} alt=\"error\" />\n                <span>{`Error ${errorCode} occurred :(`}</span>\n            </ErrorWrapper>\n        );\n    else return <Panel />;\n};\n","export const unixDateToString = (unixDate) => {\n    let date = new Date(unixDate);\n    const day = date.getDay();\n    const dayNum = date.getDate();\n    const month = date.getMonth();\n\n    const weekday = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n    ];\n    const monthName = [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n    ];\n\n    return `${weekday[day]}, ${monthName[month]} ${dayNum}`;\n};\n","import styled from 'styled-components/macro';\n\nexport const StyledSearchButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    width: 50px;\n    height: 50px;\n    border: none;\n    background-color: white;\n    border-radius: 0 6px 6px 0;\n`;\n","import React from 'react';\nimport { StyledSearchButton } from './SearchButton.styles';\nimport Search from '../../images/icons/Search.svg';\n\nexport const SearchButton = ({ handleSearch }) => {\n    return (\n        <StyledSearchButton onClick={handleSearch}>\n            <img src={Search} alt=\"search\" />\n        </StyledSearchButton>\n    );\n};\n","import styled from 'styled-components/macro';\n\nexport const StyledCitiesList = styled.ul`\n    position: fixed;\n    background-color: #eff5f9;\n    list-style-type: none;\n    padding: 5px;\n    margin: 0;\n    top: ${(props) =>\n        props.searchBarPosition.top + props.searchBarPosition.height + 'px'};\n    left: ${(props) => props.searchBarPosition.left + 'px'};\n    width: ${(props) => props.searchBarPosition.width + 50 + 'px'};\n`;\n","import styled from 'styled-components/macro';\n\nexport const StyledListItem = styled.li`\n    height: 65px;\n    background: transparent;\n    border-bottom: 1px solid #8ca4b3;\n    button {\n        cursor: pointer;\n        border: none;\n        background: transparent;\n        display: flex;\n        align-items: center;\n        width: 100%;\n        height: 100%;\n        color: #435865;\n    }\n`;\n\nexport const Item = styled.div`\n    margin: 0 12px;\n`;\n","import React from 'react';\nimport { StyledListItem, Item } from './ListItem.styles';\n\nexport const ListItem = ({ name, country, id, handleSearch }) => {\n    return (\n        <StyledListItem>\n            <button value={id} onClick={() => handleSearch(id)}>\n                <Item>{name}</Item>\n                <Item>{country}</Item>\n            </button>\n        </StyledListItem>\n    );\n};\n","import React from 'react';\nimport { StyledCitiesList } from './CitiesList.styles';\nimport { ListItem } from '../ListItem/ListItem';\n\nexport const CitiesList = ({\n    filteredCities,\n    inputValue,\n    searchBarPosition,\n    handleSearch,\n}) => {\n    if (filteredCities && inputValue)\n        return (\n            <StyledCitiesList searchBarPosition={searchBarPosition}>\n                {filteredCities.slice(0, 10).map((city) => (\n                    <ListItem\n                        key={city.id}\n                        name={city.name}\n                        country={city.country}\n                        id={city.id}\n                        handleSearch={handleSearch}\n                    />\n                ))}\n            </StyledCitiesList>\n        );\n    else return <div />;\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getWeatherFetch } from '../../store/main/main.slice';\n\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchWrapper, WeatherWrapper } from './WeatherList.styles';\nimport { WeatherCard } from '../WeatherCard/WeatherCard';\nimport { SearchButton } from '../SearchButton/SearchButton';\nimport citiesList from '../../json/city.list.min.json';\nimport { CitiesList } from '../CitiesList/CitiesList';\n\nexport const WeatherList = () => {\n    const dispatch = useDispatch();\n    const weather = useSelector((state) => state.weather);\n    const [inputValue, setInputValue] = useState('');\n    const [filteredCities, setFilteredCities] = useState([]);\n    const [searchBarPosition, setSearchBarPosition] = useState([]);\n\n    const handleSearchByName = () => {\n        if (inputValue.trim && typeof inputValue === 'string')\n            handleSearch(inputValue);\n    };\n\n    const handleSearch = (value) => {\n        if (weather.state !== 'loading') {\n            dispatch(getWeatherFetch(value));\n            setInputValue('');\n        }\n    };\n\n    const handleSearchBarMount = useCallback((ref) => {\n        if (ref.current) {\n            setSearchBarPosition(ref.current.getBoundingClientRect());\n        }\n    }, []);\n\n    const filterCities = () => {\n        setFilteredCities(\n            citiesList.filter((city) => {\n                return city.name\n                    .toLowerCase()\n                    .includes(inputValue.toLowerCase());\n            })\n        );\n    };\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n        filterCities();\n    };\n\n    useEffect(() => {\n        console.log(filteredCities);\n    }, [filteredCities]);\n\n    return (\n        <div>\n            <SearchWrapper>\n                <SearchBar\n                    handleInputChange={handleInputChange}\n                    handleSearch={handleSearchByName}\n                    inputValue={inputValue}\n                    handleSearchBarMount={handleSearchBarMount}\n                />\n                <SearchButton\n                    handleSearch={handleSearchByName}\n                    inputValue={inputValue}\n                >\n                    Search\n                </SearchButton>\n            </SearchWrapper>\n            <WeatherWrapper>\n                <WeatherCard\n                    location={weather.location}\n                    state={weather.state}\n                    errorCode={weather.errorCode}\n                />\n            </WeatherWrapper>\n            <CitiesList\n                filteredCities={filteredCities}\n                inputValue={inputValue}\n                searchBarPosition={searchBarPosition}\n                handleSearch={handleSearch}\n            />\n        </div>\n    );\n};\n","import React from 'react';\nimport './App.css';\nimport { Container } from './App.styles';\nimport { WeatherList } from './components/WeatherList/WeatherList';\n\nfunction App() {\n    return (\n        <div>\n            <Container>\n                <WeatherList />\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { getWeatherSuccess, getWeatherFailure } from './main.slice';\n\nfunction* workGetWeatherFetch(action) {\n    try {\n        let weatherData = {};\n        if (typeof action.payload === 'string') {\n            weatherData = yield call(() =>\n                axios.get(\n                    `https://api.openweathermap.org/data/2.5/forecast?q=${action.payload}&units=metric&lang=russian&appid=c53bf3e244553ba293bc4ff420dc8478`\n                )\n            );\n        } else if (Number.isInteger(action.payload)) {\n            weatherData = yield call(() =>\n                axios.get(\n                    `https://api.openweathermap.org/data/2.5/forecast?id=${action.payload}&units=metric&lang=russian&appid=c53bf3e244553ba293bc4ff420dc8478`\n                )\n            );\n        }\n        const formattedWeatherData = {\n            name: weatherData.data.city.name,\n            country: weatherData.data.city.country,\n            unixDate: Date.parse(weatherData.data.list[0].dt_txt),\n            weather: weatherData.data.list[0].weather[0].main,\n            weatherIcon: weatherData.data.list[0].weather[0].icon,\n            currentTemp: weatherData.data.list[0].main.temp,\n            feelsLike: weatherData.data.list[0].main.feels_like,\n            windSpeed: weatherData.data.list[0].wind.speed,\n            humidity: weatherData.data.list[0].main.humidity,\n        };\n        yield put(getWeatherSuccess(formattedWeatherData));\n    } catch (error) {\n        yield put(getWeatherFailure(error));\n    }\n}\n\nfunction* weatherSaga() {\n    yield takeEvery('weather/getWeatherFetch', workGetWeatherFetch);\n}\n\nexport default weatherSaga;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport weatherReducer from './main/main.slice';\n\nexport const rootReducer = combineReducers({\n    weather: weatherReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport weatherSaga from './main/main.sagas';\nimport { rootReducer } from './root.reducer';\n\nconst saga = createSagaMiddleware();\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware: [saga],\n});\n\nsaga.run(weatherSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}