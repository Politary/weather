{"version":3,"sources":["images/icons/Error.svg","images/icons/Search.svg","App.styles.js","store/main/main.slice.js","components/SearchBar/SearchBar.styles.js","components/SearchBar/SearchBar.jsx","components/WeatherList/WeatherList.styles.js","components/WeatherCard/WeatherCard.styles.js","components/WeatherCard/WeatherCard.jsx","utils/utils.js","components/SearchButton/SearchButton.styles.js","components/SearchButton/SearchButton.jsx","components/CitiesList/CitiesList.styles.js","components/ListItem/ListItem.styles.js","components/ListItem/ListItem.jsx","components/CitiesList/CitiesList.jsx","components/WeatherList/WeatherList.jsx","App.js","store/main/main.sagas.js","store/root.reducer.js","store/index.js","index.js"],"names":["module","exports","Container","styled","div","weatherSlice","createSlice","name","initialState","location","country","unixDate","weatherIcon","currentTemp","feelsLike","weather","windSpeed","humidity","status","errorCode","autocompleteList","cities","reducers","getAutoCompleteListFetch","state","getAutoCompleteListSuccess","action","console","log","payload","getAutoCompleteListFailure","clearAutoCompleteList","getWeatherFetch","getWeatherSuccess","getWeatherFailure","response","actions","StyledSearchBar","input","SearchBar","handleInputChange","handleSearch","inputValue","handleSearchBarMount","ref","useRef","useEffect","type","placeholder","onChange","onKeyDown","e","code","value","WeatherWrapper","attrs","props","isLoading","SearchWrapper","ErrorWrapper","FooterItem","WeatherHeader","WeatherFooter","WeatherStat","StatValue","span","CurrentTemp","WeatherTypeContainer","City","Country","Weather","Date","Panel","WeatherCard","date","day","getDay","dayNum","getDate","month","getMonth","unixDateToString","src","alt","Error","StyledSearchButton","button","SearchButton","onClick","Search","StyledCitiesList","ul","searchBarPosition","top","height","left","width","StyledListItem","li","Item","ListItem","coordinates","CitiesList","map","city","key","country_name","WeatherList","dispatch","useDispatch","useSelector","useState","setInputValue","setSearchBarPosition","handleSearchByName","useCallback","current","getBoundingClientRect","trim","target","App","workGetWeatherFetch","workGetAutoCompleteListFetch","weatherSaga","call","axios","get","lat","lon","weatherData","formattedWeatherData","data","parse","list","dt_txt","main","icon","temp","feels_like","wind","speed","put","slice","takeEvery","rootReducer","combineReducers","weatherReducer","saga","createSagaMiddleware","store","configureStore","reducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dcd44ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Error.da5cc546.svg\";","module.exports = __webpack_public_path__ + \"static/media/Search.c2a17a15.svg\";","import styled from 'styled-components/macro';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    max-width: 500px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst weatherSlice = createSlice({\n    name: 'weather',\n    initialState: {\n        location: {\n            name: '',\n            country: '',\n            unixDate: '',\n            weatherIcon: null,\n            currentTemp: '',\n            feelsLike: '',\n            weather: '',\n            windSpeed: '',\n            humidity: null,\n            status: 'idle',\n            errorCode: null,\n        },\n        autocompleteList: {\n            status: '',\n            cities: [],\n        },\n    },\n    reducers: {\n        getAutoCompleteListFetch: (state) => {\n            state.autocompleteList.status = 'loading';\n        },\n        getAutoCompleteListSuccess: (state, action) => {\n            state.autocompleteList.status = 'loaded';\n            console.log(action.payload);\n            state.autocompleteList.cities = action.payload;\n        },\n        getAutoCompleteListFailure: (state, action) => {\n            state.autocompleteList.status = 'error';\n            console.log(action.payload);\n        },\n        clearAutoCompleteList: (state) => {\n            state.autocompleteList.cities = [];\n        },\n        getWeatherFetch: (state) => {\n            state.location.status = 'loading';\n        },\n        getWeatherSuccess: (state, action) => {\n            state.location = action.payload;\n            state.location.status = 'loaded';\n            state.location.errorCode = null;\n        },\n        getWeatherFailure: (state, action) => {\n            console.log(action.payload.response.status);\n            state.location = {\n                name: '',\n                country: '',\n                unixDate: '',\n                weatherIcon: null,\n                currentTemp: '',\n                feelsLike: '',\n                weather: '',\n                windSpeed: '',\n                humidity: null,\n                status: 'error',\n                errorCode: action.payload.response.status,\n            };\n        },\n    },\n});\n\nexport default weatherSlice.reducer;\nexport const {\n    getAutoCompleteListFetch,\n    getAutoCompleteListSuccess,\n    getAutoCompleteListFailure,\n    clearAutoCompleteList,\n    getWeatherFetch,\n    getWeatherSuccess,\n    getWeatherFailure,\n} = weatherSlice.actions;\n","import styled from 'styled-components/macro';\r\n\r\nexport const StyledSearchBar = styled.input`\r\n    box-sizing: border-box;\r\n    width: 595px;\r\n    height: 50px;\r\n    border: none;\r\n    border-radius: 6px 0 0 6px;\r\n    background-color: white;\r\n    padding: 14px 16px;\r\n    color: #8ca4b3;\r\n    &:focus,\r\n    &:active,\r\n    &:focus-visible {\r\n        border: none;\r\n        outline: none;\r\n    }\r\n`;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { StyledSearchBar } from './SearchBar.styles';\r\n\r\nexport const SearchBar = ({\r\n    handleInputChange,\r\n    handleSearch,\r\n    inputValue,\r\n    handleSearchBarMount,\r\n}) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        handleSearchBarMount(ref);\r\n    }, [handleSearchBarMount]);\r\n\r\n    const handleInputSubmit = (e) => {\r\n        if (e.code === 'Enter') {\r\n            handleSearch();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledSearchBar\r\n            ref={ref}\r\n            type=\"text\"\r\n            placeholder=\"Search by city name\"\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleInputSubmit}\r\n            value={inputValue}\r\n        />\r\n    );\r\n};\r\n","import styled from 'styled-components/macro';\n\nexport const WeatherWrapper = styled.div.attrs((props) => ({\n    name: props.name,\n    isLoading: props.isLoading,\n}))`\n    //display: ${(props) =>\n        props.name === '' && !props.isLoading ? 'none' : 'flex'};\n    border-radius: 6px;\n`;\n\nexport const SearchWrapper = styled.div`\n    display: flex;\n    margin-top: 100px;\n    margin-bottom: 50px;\n`;\n\nexport const ErrorWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    img {\n        width: 109px;\n        height: 116px;\n        margin: 32px;\n    }\n    span {\n        font-weight: 600;\n        line-height: 1.5rem;\n        color: #9ab0bd;\n    }\n`;\n","import styled from 'styled-components/macro';\n\nexport const FooterItem = styled.div`\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    padding: 24px;\n    width: 50%;\n    box-sizing: border-box;\n    height: 100%;\n    img {\n        height: 50px;\n        width: 50px;\n    }\n    :first-of-type {\n        border-right: 1px solid #8ca4b3;\n        justify-content: space-between;\n    }\n`;\n\nexport const WeatherHeader = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 55px;\n    width: 645px;\n    padding: 20px 24px;\n    border-bottom: 1px solid #8ca4b3;\n    border-radius: 6px 6px 0 0;\n`;\n\nexport const WeatherFooter = styled.div`\n    display: flex;\n    align-items: center;\n    height: 120px;\n    width: 645px;\n`;\n\nexport const WeatherStat = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 95px;\n    font-size: 0.75rem;\n    font-weight: 500;\n    color: #8ca4b3;\n    padding-right: 32px;\n`;\n\nexport const StatValue = styled.span`\n    color: #435865;\n`;\n\nexport const CurrentTemp = styled.div`\n    display: flex;\n    height: 100%;\n    align-items: center;\n    font-size: 4rem;\n    color: #435865;\n`;\n\nexport const WeatherTypeContainer = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100%;\n    flex-direction: column;\n`;\n\nexport const City = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n    color: #435865; ;\n`;\n\nexport const Country = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n    color: #8ca4b3;\n    padding-left: 12px;\n`;\n\nexport const Weather = styled.span`\n    font-size: 14px;\n    font-weight: 500;\n    color: #435865;\n`;\n\nexport const Date = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n    color: #8ca4b3;\n`;\n\nexport const Panel = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    border-radius: 6px;\n    background-color: white;\n`;\n","import React from 'react';\r\nimport {\r\n    FooterItem,\r\n    Panel,\r\n    WeatherTypeContainer,\r\n    WeatherFooter,\r\n    WeatherHeader,\r\n    CurrentTemp,\r\n    WeatherStat,\r\n    StatValue,\r\n    Country,\r\n    Date,\r\n    City,\r\n    Weather,\r\n} from './WeatherCard.styles';\r\nimport { unixDateToString } from '../../utils/utils';\r\nimport Error from '../../images/icons/Error.svg';\r\nimport { ErrorWrapper } from '../WeatherList/WeatherList.styles';\r\n\r\nexport const WeatherCard = (props) => {\r\n    const {\r\n        location: {\r\n            name,\r\n            country,\r\n            unixDate,\r\n            weatherIcon,\r\n            currentTemp,\r\n            feelsLike,\r\n            weather,\r\n            windSpeed,\r\n            humidity,\r\n            status,\r\n            errorCode,\r\n        },\r\n    } = props;\r\n    if (status === 'loaded' && errorCode === null) {\r\n        return (\r\n            <Panel>\r\n                <WeatherHeader>\r\n                    <div>\r\n                        <City>{name}</City>\r\n                        <Country>{country}</Country>\r\n                    </div>\r\n                    <Date>{unixDateToString(unixDate)}</Date>\r\n                </WeatherHeader>\r\n                <WeatherFooter>\r\n                    <FooterItem>\r\n                        <CurrentTemp>{`${currentTemp}°`}</CurrentTemp>\r\n                        <WeatherTypeContainer>\r\n                            {weatherIcon ? (\r\n                                <img\r\n                                    src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\r\n                                    alt=\"weatherImage\"\r\n                                />\r\n                            ) : null}\r\n                            <Weather>{weather}</Weather>\r\n                        </WeatherTypeContainer>\r\n                    </FooterItem>\r\n                    <FooterItem>\r\n                        <WeatherStat>\r\n                            <span>Humidity:</span>\r\n                            <StatValue>{`${humidity}%`}</StatValue>\r\n                        </WeatherStat>\r\n                        <WeatherStat>\r\n                            <span>Wind:</span>\r\n                            <StatValue>{`${windSpeed}km/h`}</StatValue>\r\n                        </WeatherStat>\r\n                        <WeatherStat>\r\n                            <span>Feels like</span>\r\n                            <StatValue>{` ${feelsLike}°`}</StatValue>\r\n                        </WeatherStat>\r\n                    </FooterItem>\r\n                </WeatherFooter>\r\n            </Panel>\r\n        );\r\n    } else if (status === 'error' && errorCode === 404) {\r\n        return (\r\n            <ErrorWrapper>\r\n                <img src={Error} alt=\"error\" />\r\n                <span>Sorry, there is no such city</span>\r\n            </ErrorWrapper>\r\n        );\r\n    } else if (status === 'error')\r\n        return (\r\n            <ErrorWrapper>\r\n                <img src={Error} alt=\"error\" />\r\n                <span>{`Error ${errorCode} occurred :(`}</span>\r\n            </ErrorWrapper>\r\n        );\r\n    else return <Panel />;\r\n};\r\n","export const unixDateToString = (unixDate) => {\n    let date = new Date(unixDate);\n    const day = date.getDay();\n    const dayNum = date.getDate();\n    const month = date.getMonth();\n\n    const weekday = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n    ];\n    const monthName = [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n    ];\n\n    return `${weekday[day]}, ${monthName[month]} ${dayNum}`;\n};\n","import styled from 'styled-components/macro';\r\n\r\nexport const StyledSearchButton = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    width: 50px;\r\n    height: 50px;\r\n    border: none;\r\n    background-color: white;\r\n    border-radius: 0 6px 6px 0;\r\n`;\r\n","import React from 'react';\r\nimport { StyledSearchButton } from './SearchButton.styles';\r\nimport Search from '../../images/icons/Search.svg';\r\n\r\nexport const SearchButton = ({ handleSearch }) => {\r\n    return (\r\n        <StyledSearchButton onClick={handleSearch}>\r\n            <img src={Search} alt=\"search\" />\r\n        </StyledSearchButton>\r\n    );\r\n};\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const StyledCitiesList = styled.ul`\r\n    position: fixed;\r\n    background-color: #eff5f9;\r\n    list-style-type: none;\r\n    padding: 5px;\r\n    margin: 0;\r\n    top: ${(props) =>\r\n        props.searchBarPosition.top + props.searchBarPosition.height + 'px'};\r\n    left: ${(props) => props.searchBarPosition.left + 'px'};\r\n    width: ${(props) => props.searchBarPosition.width + 50 + 'px'};\r\n`;\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const StyledListItem = styled.li`\r\n    height: 65px;\r\n    background: transparent;\r\n    border-bottom: 1px solid #8ca4b3;\r\n    color: #435865;\r\n    font-weight: 500;\r\n    button {\r\n        cursor: pointer;\r\n        border: none;\r\n        background: transparent;\r\n        display: flex;\r\n        align-items: center;\r\n        width: 100%;\r\n        height: 100%;\r\n        color: #435865;\r\n        font-size: 14px;\r\n        font-family: 'Inter', sans-serif;\r\n    }\r\n`;\r\n\r\nexport const Item = styled.div`\r\n    margin: 0 12px;\r\n`;\r\n","import React from 'react';\r\nimport { StyledListItem, Item } from './ListItem.styles';\r\n\r\nexport const ListItem = ({ name, coordinates, handleSearch }) => {\r\n    return (\r\n        <StyledListItem>\r\n            <button value={name} onClick={() => handleSearch(coordinates)}>\r\n                <Item>{name}</Item>\r\n            </button>\r\n        </StyledListItem>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { StyledCitiesList } from './CitiesList.styles';\r\nimport { ListItem } from '../ListItem/ListItem';\r\n\r\nexport const CitiesList = ({\r\n    weather,\r\n    inputValue,\r\n    searchBarPosition,\r\n    handleSearch,\r\n}) => {\r\n    if (weather.autocompleteList.cities && inputValue)\r\n        return (\r\n            <StyledCitiesList searchBarPosition={searchBarPosition}>\r\n                {weather.autocompleteList.cities.map((city) => (\r\n                    <ListItem\r\n                        key={city.name + city.country_name}\r\n                        name={city.name}\r\n                        coordinates={city.coordinates}\r\n                        handleSearch={handleSearch}\r\n                    />\r\n                ))}\r\n            </StyledCitiesList>\r\n        );\r\n    else return <div />;\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    getAutoCompleteListFetch,\n    getWeatherFetch,\n    clearAutoCompleteList,\n} from '../../store/main/main.slice';\n\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchWrapper, WeatherWrapper } from './WeatherList.styles';\nimport { WeatherCard } from '../WeatherCard/WeatherCard';\nimport { SearchButton } from '../SearchButton/SearchButton';\nimport { CitiesList } from '../CitiesList/CitiesList';\n\nexport const WeatherList = () => {\n    const dispatch = useDispatch();\n    const weather = useSelector((state) => state.weather);\n    const [inputValue, setInputValue] = useState('');\n    const [searchBarPosition, setSearchBarPosition] = useState([]);\n\n    const handleSearchByName = () => {\n        if (weather.autocompleteList.cities[0]) {\n            handleSearch(weather.autocompleteList.cities[0].coordinates);\n        }\n    };\n\n    const handleSearch = (coordinates) => {\n        if (weather.autocompleteList.cities[0]) {\n            dispatch(getWeatherFetch(coordinates));\n            dispatch(clearAutoCompleteList());\n            setInputValue('');\n        }\n    };\n\n    const handleSearchBarMount = useCallback((ref) => {\n        console.log('handlesEARCHbARmOUNT');\n        if (ref.current) {\n            setSearchBarPosition(ref.current.getBoundingClientRect());\n        }\n    }, []);\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    useEffect(() => {\n        if (inputValue.trim()) dispatch(getAutoCompleteListFetch(inputValue));\n    }, [inputValue, dispatch]);\n\n    return (\n        <div>\n            <SearchWrapper>\n                <SearchBar\n                    handleInputChange={handleInputChange}\n                    handleSearch={handleSearchByName}\n                    inputValue={inputValue}\n                    handleSearchBarMount={handleSearchBarMount}\n                />\n                <SearchButton\n                    handleSearch={handleSearchByName}\n                    inputValue={inputValue}\n                >\n                    Search\n                </SearchButton>\n            </SearchWrapper>\n            <WeatherWrapper>\n                <WeatherCard location={weather.location} />\n            </WeatherWrapper>\n            <CitiesList\n                weather={weather}\n                inputValue={inputValue}\n                searchBarPosition={searchBarPosition}\n                handleSearch={handleSearch}\n            />\n        </div>\n    );\n};\n","import React from 'react';\nimport './App.css';\nimport { Container } from './App.styles';\nimport { WeatherList } from './components/WeatherList/WeatherList';\n\nfunction App() {\n    return (\n        <div>\n            <Container>\n                <WeatherList />\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    getAutoCompleteListFetch,\r\n    getAutoCompleteListSuccess,\r\n    getAutoCompleteListFailure,\r\n    getWeatherSuccess,\r\n    getWeatherFailure,\r\n    getWeatherFetch,\r\n} from './main.slice';\r\n\r\nfunction* workGetWeatherFetch(action) {\r\n    try {\r\n        const weatherData = yield call(() =>\r\n            axios.get(\r\n                `https://api.openweathermap.org/data/2.5/forecast?lat=${action.payload.lat}&lon=${action.payload.lon}&units=metric&lang=russian&appid=c53bf3e244553ba293bc4ff420dc8478`\r\n            )\r\n        );\r\n        const formattedWeatherData = {\r\n            name: weatherData.data.city.name,\r\n            country: weatherData.data.city.country,\r\n            unixDate: Date.parse(weatherData.data.list[0].dt_txt),\r\n            weather: weatherData.data.list[0].weather[0].main,\r\n            weatherIcon: weatherData.data.list[0].weather[0].icon,\r\n            currentTemp: weatherData.data.list[0].main.temp,\r\n            feelsLike: weatherData.data.list[0].main.feels_like,\r\n            windSpeed: weatherData.data.list[0].wind.speed,\r\n            humidity: weatherData.data.list[0].main.humidity,\r\n        };\r\n        yield put(getWeatherSuccess(formattedWeatherData));\r\n    } catch (error) {\r\n        yield put(getWeatherFailure(error));\r\n    }\r\n}\r\n\r\nfunction* workGetAutoCompleteListFetch(action) {\r\n    try {\r\n        const autocompleteList = yield call(() =>\r\n            axios.get(\r\n                `http://autocomplete.travelpayouts.com/places2?term=${action.payload}&locale=ru&types[]=city`\r\n            )\r\n        );\r\n        yield put(\r\n            getAutoCompleteListSuccess(autocompleteList.data.slice(0, 5))\r\n        );\r\n    } catch (error) {\r\n        yield put(getAutoCompleteListFailure(error));\r\n    }\r\n}\r\n\r\nfunction* weatherSaga() {\r\n    yield takeEvery(getWeatherFetch, workGetWeatherFetch);\r\n    yield takeEvery(getAutoCompleteListFetch, workGetAutoCompleteListFetch);\r\n}\r\n\r\nexport default weatherSaga;\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport weatherReducer from './main/main.slice';\r\n\r\nexport const rootReducer = combineReducers({\r\n    weather: weatherReducer,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport weatherSaga from './main/main.sagas';\nimport { rootReducer } from './root.reducer';\n\nconst saga = createSagaMiddleware();\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware: [saga],\n});\n\nsaga.run(weatherSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}